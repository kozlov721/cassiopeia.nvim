local Group = require('cassiopeia.utils').Group
local inherit = require('cassiopeia.utils').Inherit
local c = require('cassiopeia.utils').colors
local s = require('cassiopeia.utils').styles

local capitalize = function(str)
  return (str:gsub("^%l", string.upper))
end

for key, _ in pairs(require('cassiopeia.palette')) do
  local name = capitalize(key)
  Group.new(name, c[key], nil, nil)
  for _, style in ipairs{'italic', 'underline', 'bold', 'undercurl'} do
    inherit(name .. capitalize(style), name, s[style])
  end
end


Group.new('ColorColumn'     , nil   , c.bg1      , nil         )
Group.new('Cursor'          , nil   , nil        , s.reverse   )
Group.new('CursorColumn'    , nil   , c.bg1      , nil         )
Group.new('CursorLine'      , nil   , c.bg1      , nil         )
Group.new('CursorLineNr'    , c.fg  , c.bg1      , nil         )
Group.new('DiffText'        , nil   , nil        , s.reverse   )
Group.new('EndOfBuffer'     , c.bg0 , c.bg0      , nil         )
Group.new('IncSearch'       , c.bg0 , c.bg_red   , nil         )
Group.new('MatchParen'      , nil   , c.bg4      , nil         )
Group.new('None'            , nil   , nil        , nil         )
Group.new('PmenuSbar'       , nil   , c.bg2      , nil         )
Group.new('PmenuSel'        , c.bg0 , c.bg_blue  , nil         )
Group.new('PmenuThumb'      , nil   , c.gray     , nil         )
Group.new('Search'          , c.bg0 , c.bg_green , nil         )
Group.new('Undercurled'     , nil   , nil        , s.undercurl )
Group.new('Underlined'      , nil   , nil        , s.underline )
Group.new('Visual'          , nil   , c.bg3      , nil         )
Group.new('VisualNOS'       , nil   , c.bg3      , s.underline )
Group.new('WildMenu'        , c.bg0 , c.bg_blue  , nil         )
Group.new('debugBreakpoint' , c.bg0 , c.red      , nil         )
Group.new('debugPC'         , c.bg0 , c.green    , nil         )


inherit('Conceal'          , 'Gray'                      )
inherit('CursorIM'         , 'Cursor'                    )
inherit('Debug'            , 'Yellow'                    )
inherit('DiffAdd'          , 'Green'                     )
inherit('DiffChange'       , 'Blue'                      )
inherit('DiffDelete'       , 'Red'                       )
inherit('Directory'        , 'GreenBold'                 )
inherit('ErrorMsg'         , 'RedBold' , s.underline     )
inherit('FloatBorder'      , 'Black'                     )
inherit('FoldColumn'       , 'Gray'    , nil , c.bg1     )
inherit('Folded'           , 'Gray'    , nil , c.bg1     )
inherit('LineNr'           , 'Gray'                      )
inherit('ModeMsg'          , 'FgBold'                    )
inherit('MoreMsg'          , 'BlueBold'                  )
inherit('NonText'          , 'Bg4'                       )
inherit('Normal'           , 'Fg'      , nil , c.bg0     )
inherit('NormalFloat'      , 'Normal'  , nil , c.bg2     )
inherit('Pmenu'            , 'Fg'      , nil , c.bg2     )
inherit('Question'         , 'Yellow'                    )
inherit('QuickFixLine'     , 'BlueBold'                  )
inherit('SignColumn'       , 'Fg'      , nil , c.bg1     )
inherit('SpecialKey'       , 'Bg4'                       )
inherit('SpellBad'         , 'RedUndercurl'              )
inherit('SpellCap'         , 'YellowUndercurl'           )
inherit('SpellLocal'       , 'BlueUndercurl'             )
inherit('SpellRare'        , 'PurpleUndercurl'           )
inherit('StatusLine'       , 'Fg'      , nil , c.bg3     )
inherit('StatusLineNC'     , 'Gray'    , nil , c.bg1     )
inherit('StatusLineTerm'   , 'Fg'      , nil , c.bg3     )
inherit('StatusLineTermNC' , 'Gray'    , nil , c.bg1     )
inherit('TabLine'          , 'Fg'      , nil , c.bg4     )
inherit('TabLineFill'      , 'Gray'    , nil , c.bg1     )
inherit('TabLineSel'       , 'Bg0'     , nil , c.bg_red  )
inherit('Terminal'         , 'Fg'      , nil , c.bg0     )
inherit('ToolbarButton'    , 'Bg0'     , nil , c.bg_blue )
inherit('ToolbarLine'      , 'Fg'      , nil , c.bg2     )
inherit('VertSplit'        , 'Gray'                      )
inherit('WarningMsg'       , 'YellowBold'                )
inherit('Whitespace'       , 'Bg4'                       )
inherit('iCursor'          , 'Cursor'                    )
inherit('lCursor'          , 'Cursor'                    )
inherit('vCursor'          , 'Cursor'                    )



inherit('Boolean'        , 'PurpleItalic'  )
inherit('Character'      , 'Yellow'        )
inherit('Comment'        , 'GrayItalic'    )
inherit('Conditional'    , 'RedItalic'     )
inherit('Constant'       , 'OrangeItalic'  )
inherit('Define'         , 'Red'           )
inherit('Delimiter'      , 'Fg'            )
inherit('Error'          , 'Red'           )
inherit('Exception'      , 'Red'           )
inherit('Float'          , 'Purple'        )
inherit('Function'       , 'Orange'        )
inherit('Identifier'     , 'OrangeItalic'  )
inherit('Ignore'         , 'Gray'          )
inherit('Include'        , 'Red'           )
inherit('Keyword'        , 'RedItalic'     )
inherit('Label'          , 'Purple'        )
inherit('Macro'          , 'Purple'        )
inherit('Number'         , 'Purple'        )
inherit('Operator'       , 'Red'           )
inherit('PreCondit'      , 'Red'           )
inherit('PreProc'        , 'Red'           )
inherit('Repeat'         , 'RedItalic'     )
inherit('Special'        , 'Purple'        )
inherit('SpecialChar'    , 'Purple'        )
inherit('SpecialComment' , 'GrayItalic'    )
inherit('Statement'      , 'RedItalic'     )
inherit('StorageClass'   , 'BlueItalic'    )
inherit('String'         , 'Yellow'        )
inherit('Structure'      , 'BlueItalic'    )
inherit('Tag'            , 'Orange'        )
inherit('Title'          , 'RedBold'       )
inherit('Todo'           , 'BlueUnderline' )
inherit('Type'           , 'BlueItalic'    )
inherit('Typedef'        , 'Red'           )


inherit('diffAdded'     , 'Green'  )
inherit('diffChanged'   , 'Blue'   )
inherit('diffFile'      , 'Purple' )
inherit('diffIndexLine' , 'Purple' )
inherit('diffLine'      , 'Gray'   )
inherit('diffNewFile'   , 'Orange' )
inherit('diffOldFile'   , 'Yellow' )
inherit('diffRemoved'   , 'Red'    )


inherit('gitcommitArrow'     , 'Gray'  )
inherit('gitcommitDiscarded' , 'Gray'  )
inherit('gitcommitFile'      , 'Green' )
inherit('gitcommitOnBranch'  , 'Gray'  )
inherit('gitcommitSelected'  , 'Gray'  )
inherit('gitcommitSummary'   , 'Red'   )
inherit('gitcommitUnmerged'  , 'Gray'  )
inherit('gitcommitUntracked' , 'Gray'  )


inherit('dosiniHeader' , 'RedBold' )
inherit('dosiniLabel'  , 'Blue'    )
inherit('dosiniNumber' , 'Green'   )
inherit('dosiniValue'  , 'Green'   )


inherit('helpCommand'        , 'Yellow'         )
inherit('helpExample'        , 'Green'          )
inherit('helpHeader'         , 'OrangeBold'     )
inherit('helpHeadline'       , 'RedBold'        )
inherit('helpHyperTextEntry' , 'BlueBold'       )
inherit('helpHyperTextJump'  , 'Blue'           )
inherit('helpNote'           , 'PurpleBold'     )
inherit('helpSectionDelim'   , 'Gray'           )
inherit('helpSpecial'        , 'Purple'         )
inherit('helpURL'            , 'GreenUnderline' )


inherit('LspReferenceRead'  , 'None' , nil , c.bg1 )
inherit('LspReferenceText'  , 'None' , nil , c.bg1 )
inherit('LspReferenceWrite' , 'None' , nil , c.bg1 )

inherit('LspDiagnosticsError'       , 'Gray'   )
inherit('LspDiagnosticsHint'        , 'Gray'   )
inherit('LspDiagnosticsInformation' , 'Gray'   )
inherit('LspDiagnosticsWarning'     , 'Gray'   )
inherit('healthError'               , 'Red'    )
inherit('healthSuccess'             , 'Green'  )
inherit('healthWarning'             , 'Yellow' )


inherit('TSAnnotation'         , 'Constant'                    )
inherit('TSAttribute'          , 'Constant'                    )
inherit('TSBoolean'            , 'Boolean'                     )
inherit('TSCharacter'          , 'Character'                   )
inherit('TSComment'            , 'Comment'                     )
inherit('TSConditional'        , 'Conditional'                 )
inherit('TSConstBuiltin'       , 'PurpleBold'                  )
inherit('TSConstMacro'         , 'Constant'                    )
inherit('TSConstant'           , 'Constant'                    )
inherit('TSConstructor'        , 'Function'                    )
inherit('TSEmphasis'           , 'FgItalic'                    )
inherit('TSError'              , 'Error'                       )
inherit('TSException'          , 'Exception'                   )
inherit('TSField'              , 'OrangeItalic'                )
inherit('TSFloat'              , 'Float'                       )
inherit('TSFuncBuiltin'        , 'Green'                       )
inherit('TSFuncMacro'          , 'GreenItalic'                 )
inherit('TSFunction'           , 'Function'                    )
inherit('TSInclude'            , 'Include'                     )
inherit('TSKeyword'            , 'Keyword'                     )
inherit('TSKeywordFunction'    , 'Keyword'                     )
inherit('TSKeywordOperator'    , 'RedBold'                     )
inherit('TSKeywordReturn'      , 'Keyword'                     )
inherit('TSLabel'              , 'Label'                       )
inherit('TSLiteral'            , 'Fg'                          )
inherit('TSMethod'             , 'Function'                    )
inherit('TSNamespace'          , 'GreenItalic'                 )
inherit('TSNumber'             , 'Number'                      )
inherit('TSOperator'           , 'Operator'                    )
inherit('TSParameter'          , 'OrangeItalic'                )
inherit('TSParameterReference' , 'TSParameter'                 )
inherit('TSProperty'           , 'Greenish'                    )
inherit('TSPunctBracket'       , 'SkyBlue'                     )
inherit('TSPunctDelimiter'     , 'Operator'                    )
inherit('TSPunctSpecial'       , 'TSPunctDelimiter'            )
inherit('TSRepeat'             , 'Repeat'                      )
inherit('TSString'             , 'String'                      )
inherit('TSStringEscape'       , 'Purple'                      )
inherit('TSStringRegex'        , 'Blue'                        )
inherit('TSStrong'             , 'BlueBold'                    )
inherit('TSStructure'          , 'Structure'                   )
inherit('TSSymbol'             , 'TSConstant'                  )
inherit('TSTag'                , 'Tag'                         )
inherit('TSTagDelimiter'       , 'TSOperator'                  )
inherit('TSText'               , 'Fg'                          )
inherit('TSTitle'              , 'Title'                       )
inherit('TSType'               , 'Type'                        )
inherit('TSTypeBuiltin'        , 'Type'                        )
inherit('TSURI'                , 'MagentaItalic' , s.underline )
inherit('TSUnderline'          , 'Underlined'                  )
inherit('TSVariable'           , 'Fg'                          )
inherit('TSVariableBuiltin'    , 'PurpleItalic'                )
